<!DOCTYPE html>
<html>
<head>
  <title>HCI Project Portfolio</title>  
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

  <link href="css/bootstrap.min.css" rel="stylesheet">
  <link href="css/bootstrap-theme.min.css" rel="stylesheet">
  <script src="https://code.jquery.com/jquery.js"></script>
  <script src="js/bootstrap.min.js"></script>
  

  <link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="css/search-filter.css"/>
  <link rel="stylesheet" href="css/searchCSS.css">
  
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
  


  
  <style>
  * {
    box-sizing: border-box;
  }

  body {
    font: 16px;  
    margin:2px;
    background-color: white;
    font-family: "Lucida Sans Unicode", "Lucida Grande", sans-serif;
  }

  .paragraph {
    margin:18px;
  }

  .jumbotron {
   margin-left:32px;
   margin-top:15px;
   font:30px;
   background-color: #f2f2f2;
  }

  h1 {
    font-size: 2.5em;
    padding: 10px;
}

  /*the container must be positioned relative:*/
  .autocomplete {
    position: relative;
    display: inline-block;
  }

  input {
    border: 1px solid transparent;
    background-color: #f2f2f2;
    padding: 10px;
    font-size: 16px;
    margin-left: 18px;
    border: 1px solid black;
  }

  input[type=text] {
    background-color: #f2f2f2;
    width: 73%;

  }

  input[type=submit] {
    background-color: DodgerBlue;
    color: #fff;
    cursor: pointer;
  }



  .autocomplete-items {
    position: absolute;
    border: 1px solid #d4d4d4;
    border-bottom: none;
    border-top: none;
    z-index: 99;
    /*position the autocomplete items to be the same width as the container:*/
    top: 100%;
    left: 0;
    right: 0;
  }

  .autocomplete-items div {
    padding: 10px;
    cursor: pointer;
    background-color: #fff; 
    border-bottom: 1px solid #d4d4d4; 
  }

  /*when hovering an item:*/
  .autocomplete-items div:hover {
    background-color: #e9e9e9; 
  }

  /*when navigating through the items using the arrow keys:*/
  .autocomplete-active {
    background-color: DodgerBlue !important; 
    color: #ffffff; 
  }

  .dropdown-menu {
    margin-right: 193px;

  }

 #filter {
  	margin-left: 18px;
    border: 1px solid black;
  }

  #searchBtn {
  	margin-left:3px;
    height: 45px;
    width:43px;
    border: 1px solid black;
    margin-bottom: 3px;
  }
  

  /* Navigation Bar */
.icon-bar {
  width: 100%; /* Full-width */
  background-color: #424949; /* Dark-grey background */
  overflow: hidden; /* Overflow due to float */
  bottom: 0;
  position: fixed;
  margin-left:0px;
  height: 75px;
}

.icon-bar a {
  float: left; /* Float links side by side */
  text-align: center; /* Center-align text */
  width: 33%; /* Equal width (3 icons with 33% width each = 100%) */
  padding: 12px 0; /* Some top and bottom padding */
  transition: all 0.3s ease; /* Add transition for hover effects */
  color: white; /* White text color */
  font-size: 36px; /* Increased font size */
}

.icon-bar a:hover {
  background-color: black; /* Add a hover color */
}

.active {
  background-color: #2874A6; /* Add an active/current color */
}

</style>
</head>     
<body>

  <div class="container">
    

      <h1> <b><i class="fa fa-search" aria-hidden="true"></i> Search</b></h1>

      <!--
      <a href="index.html">
      Back to home
      </a>
      -->
    
  </div>

    <div class="paragraph">
      <p> Search for mentors here by name, profession, or location. Use the drop-down menu to filter results. </p>
      <br>
    </div>


  <!--Make sure the form has the autocomplete function switched off:-->
  <form autocomplete="off" action="/action_page.php">
    
    <div class="input-group-btn" >
      <button type="button" id="filter" class="btn btn-secondary dropdown-toggle dropdown-toggle-split" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" ><span class="label-icon" >Filter</span> <span class="caret" >&nbsp;</span></button>
      <div class="dropdown-menu dropdown-menu-right" >
        <ul class="category_filters" >
          <li >
            <input class="cat_type category-input" data-label="All" id="all" value="" name="radios" type="radio" ><label for="all" >All</label>
          </li>
          <li >
            <input type="radio" name="radios" id="Profession" value="Profession" ><label class="category-label" for="Profession" >Profession</label>
          </li>
          <li >
            <input type="radio" name="radios" id="Location" value="Location" ><label class="category-label" for="Location" >Location</label>
          </li>
          <li >
            <input type="radio" name="radios" id="Name" value="Name" ><label class="category-label" for="Name" >Name</label>
          </li>
        </ul>
      </div>

    </div>

    <br>


    <div class="autocomplete" style="width:300px;">
      <input id="myInput" type="text" name="searchbar" placeholder="Search">
   

    
    <button id="searchBtn" type="button" class="btn btn-secondary btn-search" onclick="location.href='http://localhost:3000/searchresults'"><span class="glyphicon glyphicon-search" >&nbsp;</span> <span class="label-icon" ></span></button>
  </div>


</form>

<div class="icon-bar">
	<a class="active" href="/search"><i class="fa fa-search"></i></a>
	<a href="/messages"><i class="fa fa-commenting-o"></i></a>
	<a href="/myprofile"><i class="fa fa-user-circle"></i></a>
</div>

<script>
  function autocomplete(inp, arr) {
  /*the autocomplete function takes two arguments,
  the text field element and an array of possible autocompleted values:*/
  var currentFocus;
  /*execute a function when someone writes in the text field:*/
  inp.addEventListener("input", function(e) {
    var a, b, i, val = this.value;
    /*close any already open lists of autocompleted values*/
    closeAllLists();
    if (!val) { return false;}
    currentFocus = -1;
    /*create a DIV element that will contain the items (values):*/
    a = document.createElement("DIV");
    a.setAttribute("id", this.id + "autocomplete-list");
    a.setAttribute("class", "autocomplete-items");
    /*append the DIV element as a child of the autocomplete container:*/
    this.parentNode.appendChild(a);
    /*for each item in the array...*/
    for (i = 0; i < arr.length; i++) {
      /*check if the item starts with the same letters as the text field value:*/
      if (arr[i].substr(0, val.length).toUpperCase() == val.toUpperCase()) {
        /*create a DIV element for each matching element:*/
        b = document.createElement("DIV");
        /*make the matching letters bold:*/
        b.innerHTML = "<strong>" + arr[i].substr(0, val.length) + "</strong>";
        b.innerHTML += arr[i].substr(val.length);
        /*insert a input field that will hold the current array item's value:*/
        b.innerHTML += "<input type='hidden' value='" + arr[i] + "'>";
        /*execute a function when someone clicks on the item value (DIV element):*/
        b.addEventListener("click", function(e) {
          /*insert the value for the autocomplete text field:*/
          inp.value = this.getElementsByTagName("input")[0].value;
              /*close the list of autocompleted values,
              (or any other open lists of autocompleted values:*/
              closeAllLists();
            });
        a.appendChild(b);
      }
    }
  });
  /*execute a function presses a key on the keyboard:*/
  inp.addEventListener("keydown", function(e) {
    var x = document.getElementById(this.id + "autocomplete-list");
    if (x) x = x.getElementsByTagName("div");
    if (e.keyCode == 40) {
        /*If the arrow DOWN key is pressed,
        increase the currentFocus variable:*/
        currentFocus++;
        /*and and make the current item more visible:*/
        addActive(x);
      } else if (e.keyCode == 38) { //up
        /*If the arrow UP key is pressed,
        decrease the currentFocus variable:*/
        currentFocus--;
        /*and and make the current item more visible:*/
        addActive(x);
      } else if (e.keyCode == 13) {
        /*If the ENTER key is pressed, prevent the form from being submitted,*/
        e.preventDefault();
        if (currentFocus > -1) {
          /*and simulate a click on the "active" item:*/
          if (x) x[currentFocus].click();
        }
      }
    });
  function addActive(x) {
    /*a function to classify an item as "active":*/
    if (!x) return false;
    /*start by removing the "active" class on all items:*/
    removeActive(x);
    if (currentFocus >= x.length) currentFocus = 0;
    if (currentFocus < 0) currentFocus = (x.length - 1);
    /*add class "autocomplete-active":*/
    x[currentFocus].classList.add("autocomplete-active");
  }
  function removeActive(x) {
    /*a function to remove the "active" class from all autocomplete items:*/
    for (var i = 0; i < x.length; i++) {
      x[i].classList.remove("autocomplete-active");
    }
  }
  function closeAllLists(elmnt) {
    /*close all autocomplete lists in the document,
    except the one passed as an argument:*/
    var x = document.getElementsByClassName("autocomplete-items");
    for (var i = 0; i < x.length; i++) {
      if (elmnt != x[i] && elmnt != inp) {
        x[i].parentNode.removeChild(x[i]);
      }
    }
  }
  /*execute a function when someone clicks in the document:*/
  document.addEventListener("click", function (e) {
    closeAllLists(e.target);
  });
}

/*An array containing all the country names in the world:*/

var locations = ["San Diego","Baltimore","New York","Chicago","San Francisco"];


/*initiate the autocomplete function on the "myInput" element, and pass along the countries array as possible autocomplete values:*/

autocomplete(document.getElementById("myInput"), locations);

</script>

</body>
</html>